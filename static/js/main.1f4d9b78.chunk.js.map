{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_this2","axios","get","then","res","data","react_default","a","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","Contacts","Fragment","map","contacts_Contact","Header","branding","href","defaultProps","About","NotFound","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","onSubmit","e","preventDefault","_this$state","uuid","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","Test","title","body","console","log","fetch","response","json","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1f4d9b78.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'DELETE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case 'ADD_CONTACT':\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    default:\n      return state;\n  }\n};\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => {\n      this.setState(state => reducer(state, action));\n    }\n  };\n\n  componentDidMount() {\n    axios\n      .get('https://jsonplaceholder.typicode.com/users')\n      .then(res => this.setState({ contacts: res.data }));\n  }\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Consumer } from '../../context';\nimport { Link } from 'react-router-dom';\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  onDeleteClick = (id, dispatch) => {\n    dispatch({ type: 'DELETE_CONTACT', payload: id });\n  };\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}{' '}\n                <i\n                  onClick={() =>\n                    this.setState({\n                      showContactInfo: !this.state.showContactInfo\n                    })\n                  }\n                  className=\"fas fa-sort-down\"\n                  style={{ cursor: 'pointer' }}\n                />\n                <i\n                  className=\"fas fa-times\"\n                  style={{ cursor: 'pointer', float: 'right', color: 'red' }}\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                />\n                <Link to={`contact/edit/${id}`}>\n                  <i\n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      cursor: 'pointer',\n                      float: 'right',\n                      color: 'black',\n                      marginRight: '1rem'\n                    }}\n                  />\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Email: {email}</li>\n                  <li className=\"list-group-item\">Phone: {phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n};\nexport default Contact;\n","import React, { Component } from 'react';\nimport Contact from './Contact';\nimport { Consumer } from '../../context';\n\nclass Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              {contacts.map(contact => (\n                <Contact key={contact.id} contact={contact} />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\nexport default Contacts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n// function Header() {\n//   return (\n//     <div>\n//       <h1>Contact Manager</h1>\n//     </div>\n//   );\n// }\n\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\">Home</i>\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\">Add</i>\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\">About</i>\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: 'My App'\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from 'react';\n\nexport default function About() {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404</span> Page Not Found\n      </h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames('form-control form-control-lg', {\n          'is-invalid': error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n  type: 'text'\n};\nexport default TextInputGroup;\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport uuid from 'uuid';\n\nclass AddContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n  onSubmit = (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    // Check for Errors\n    if (name === '') {\n      this.setState({ errors: { name: 'Name is required' } });\n      return;\n    }\n    if (email === '') {\n      this.setState({ errors: { email: 'Email is required' } });\n      return;\n    }\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Phone is required' } });\n      return;\n    }\n    const newContact = {\n      id: uuid(),\n      name,\n      email,\n      phone\n    };\n    dispatch({ type: 'ADD_CONTACT', payload: newContact });\n    // Clear state\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    this.props.history.push('/');\n  };\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  render() {\n    const { name, email, phone, errors } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\nexport default AddContact;\n","import React, { Component } from 'react';\n\nclass Test extends Component {\n  state = {\n    title: '',\n    body: ''\n  };\n  componentDidMount() {\n    console.log('componentDidMount...');\n    fetch('https://jsonplaceholder.typicode.com/posts/1')\n      .then(response => response.json())\n      .then(data => this.setState({ title: data.title, body: data.body }));\n  }\n\n  render() {\n    const { title, body } = this.state;\n    return (\n      <div>\n        <h1>{title}</h1>\n        <p>{body}</p>\n      </div>\n    );\n  }\n}\n\nexport default Test;\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport AddContact from './components/contacts/AddContact';\nimport Test from './components/test/Test';\nimport { Provider } from './context';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}